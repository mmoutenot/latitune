import os
import latitune
import unittest
import tempfile

class latituneTestCase(unittest.TestCase):

    def setUp(self):
        self.db_fd, latitune.app.config['DATABASE'] = tempfile.mkstemp()
        latitune.app.config['TESTING'] = True
        self.app = latitune.app.test_client()
        latitune.db.create_all()

    def tearDown(self):
        os.close(self.db_fd)
        os.unlink(latitune.app.config['DATABASE'])

    def test_user_constructor_applies_fields(self):
    	user = latitune.User("ben","benweitzman@gmail.com","testpass")
    	assert user.name == "ben"
    	assert user.email == "benweitzman@gmail.com"

    def test_user_password_hashes(self):
    	user = latitune.User("ben","benweitzman@gmail.com","testpass")
    	assert user.check_password("testpass")

    def test_db_sets_up(self):
    	print latitune.User.query.all()
   		user = latitune.User("ben","benweitzman@gmail.com","testpass")
   		latitune.db.session.add(user)
   		latitune.db.session.commit()
   		assert (latitune.User.query.first().name == "ben")

    def test_user_serializes(self):
    	print latitune.User.query.all()
   		user = latitune.User("ben","benweitzman@gmail.com","testpass")
   		latitune.db.session.add(user)
   		latitune.db.session.commit()
   		assert user.serialize == {"id":1,"name":"ben","email":"benweitzman@gmail.com"}


if __name__ == '__main__':
    unittest.main()
